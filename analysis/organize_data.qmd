---
title: "Organize Data Notebook"
---

```{r}
#| label: setup
#| include: false
library(here)
library(readxl)
source(here("utils","check_packages.R"))
source(here("utils","functions.R"))
```

```{r}
#| label: load_data (HIERARCHY)
#| include: true
loc_hier <- readxl::read_excel(
  here("data", "data_raw", "GBD_LOCATION_HIERARCHY.XLSX")
) |>
  select(
    location_id   = `Location ID`,
    location_name = `Location Name`
  )

cause_hier <- readxl::read_excel(
  here("data", "data_raw", "CAUSE_HIERARCHY.XLSX")
) |>
  select(
    cause_id   = `Cause ID`,
    cause_name = `Cause Name`
  )

codebook <- readxl::read_excel(
  here("data", "data_raw", "CODEBOOK.xlsx"),
) |> 
  transmute(
    cause_id   = as.integer(cause_id)
  )
```

```{r}
#| label: load_data(YLL)
#| include: true
yll_files <- list.files(
  here("data","data_raw"),
  pattern = "YLL.*RATE.*\\.CSV$",
  full.names = TRUE
)

yll_rate <- tibble(path = yll_files) |>
  mutate(
    fname       = basename(path),
    location_id = str_extract(fname, "^[0-9]+") |> as.integer(),
    sex         = if_else(str_detect(fname, "(?i)MALE"), "Male", "Female"),
    data        = map(path, \(f) read_csv(f, show_col_types = FALSE) |> 
                         select(-any_of(c("location_id","sex","location_name"))))
  ) |>
  select(-path, -fname) |>
  unnest(data)
```

```{r}
#| label: clean data
#| include: true

cleaned_dataset <- yll_rate |> 
  mutate(
    across(where(is.numeric), ~ na_if(.x, -999))
  ) |> 
  left_join(loc_hier, by = "location_id") |> 
  left_join(codebook, by = "cause_id") |> 
  mutate(
    location_id   = factor(location_id),
    location_name = factor(location_name),
    sex           = factor(sex, levels = c("Male", "Female")),
    cause_id      = factor(cause_id),
    cause_name    = factor(cause_name),
    age_group_id  = factor(age_group_id),
    year          = as.integer(year_id)
  ) |> 
  select(
    location_id, location_name,
    sex, year, age_group_id,
    cause_id, cause_name,
    val
  )

```

```{r}
#| label: Save
#| include: true


historical <- cleaned_dataset |> filter(year <= 2021)
forecast   <- cleaned_dataset |> filter(year >= 2022)
save(historical, file = here("data", "data_constructed", "historical_YLL_rate.RData"))
save(forecast,   file = here("data", "data_constructed", "forecast_YLL_rate.RData"))

save(forecast, file = here("data","data_constructed","analytical_data.RData"))
```